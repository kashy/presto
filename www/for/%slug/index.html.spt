from aspen import Response
from gittip.models.community import name_pattern, slugize
from gittip.utils import _to_age, format_money, to_statement
from gittip.utils.query_cache import QueryCache

LUXURY = 4
MAKING = "making the world better by"
I_AM = "I am"
WE_ARE = "We are"

query_cache = QueryCache(website.db, threshold=20)

[---]

_slug = path['slug']
if name_pattern.match(_slug) is None:
    raise Response(404)
slug = slugize(_slug)
if slug != _slug:
    request.redirect('../' + slug + '/')

try:
    limit = min(int(qs.get('limit', 12)), 100)
    offset = int(qs.get('offset', 0))
except ValueError:
    raise Response(400)

community = website.db.one( "SELECT community_summary.*::community_summary "
                            "FROM community_summary WHERE slug=%s"
                          , (slug,)
                           )
if community is None:
    class StubCommunity:
        slug = _slug
        name = _slug
        nmembers = 0
        check_membership = lambda a, b: False

    community = StubCommunity()

# Set the page title based on the communities name.
title = community.name + ' Community'


# Run queries for listings.
# =========================

new_participants = query_cache.all("""
-- new participants on community page

    SELECT username
         , claimed_time
         , avatar_url
         , statement
         , number
      FROM (
        SELECT DISTINCT ON (p.username)
               p.username
             , claimed_time
             , p.avatar_url
             , p.statement
             , p.number
          FROM participants p
          JOIN elsewhere e
            ON p.username = e.participant
          JOIN current_communities cc
            ON p.username = cc.participant
         WHERE claimed_time IS NOT null
           AND is_suspicious IS NOT true
           AND cc.slug = %s AND cc.is_member
           ) AS foo
  ORDER BY claimed_time DESC
     LIMIT %s
    OFFSET %s

""", (community.slug, limit, offset))

givers = query_cache.all("""
-- top givers on community page

    SELECT tipper AS username
         , anonymous_giving AS anonymous
         , sum(amount) AS amount
         , avatar_url
         , statement
         , number
      FROM (    SELECT DISTINCT ON (tipper, tippee)
                       amount
                     , tipper
                  FROM tips
                  JOIN participants p ON p.username = tipper
                  JOIN participants p2 ON p2.username = tippee
                  JOIN elsewhere ON elsewhere.participant = tippee
                  JOIN current_communities cc ON cc.participant = tipper
                 WHERE p.last_bill_result = ''
                   AND p.is_suspicious IS NOT true
                   AND p2.claimed_time IS NOT NULL
                   AND elsewhere.is_locked = false
                   AND cc.slug = %s and cc.is_member
              ORDER BY tipper, tippee, tips.mtime DESC
              ) AS foo
      JOIN participants p ON p.username = tipper
     WHERE is_suspicious IS NOT true
       AND amount > 0
  GROUP BY tipper, anonymous_giving, avatar_url, statement, number
  ORDER BY amount DESC
  LIMIT %s
  OFFSET %s

""", (community.slug, limit, offset))

# XXX I'm nearly positive that one or both of givers and receivers can contain
# orphan accounts. See https://github.com/gittip/www.gittip.com/issues/650

receivers = query_cache.all("""
-- top receivers on community page

    SELECT tippee AS username
         , anonymous_receiving AS anonymous
         , sum(amount) AS amount
         , avatar_url
         , statement
         , number
      FROM (    SELECT DISTINCT ON (tipper, tippee)
                       amount
                     , tippee
                  FROM tips
                  JOIN participants p ON p.username = tipper
                  JOIN elsewhere ON elsewhere.participant = tippee
                  JOIN current_communities cc ON cc.participant = tippee
                 WHERE last_bill_result = ''
                   AND elsewhere.is_locked = false
                   AND is_suspicious IS NOT true
                   AND claimed_time IS NOT null
                   AND cc.slug = %s and cc.is_member
              ORDER BY tipper, tippee, tips.mtime DESC
              ) AS foo
      JOIN participants p ON p.username = tippee
     WHERE is_suspicious IS NOT true
       AND amount > 0
  GROUP BY tippee, anonymous_receiving, avatar_url, statement, number
  ORDER BY amount DESC
  LIMIT %s
  OFFSET %s

""", (community.slug, limit, offset))
[---]
{% from 'templates/avatar-url.html' import avatar_url with context %}

{% extends "templates/base.html" %}

{% block heading %}
    <h2 class="top"><span>Community</span></h2>
    <p>Browse <a href="/for/">All Communities</a></p>
{% endblock %}

{% block scripts %}

<script>
$(document).ready(function() {
    $("a.mini-user:not([data-tip=''])").tipr();

    $('button.join-leave').click(function()
    {
        var button = $(this);
        var name = button.attr('data-name');
        var is_member = button.attr('data-is-member') === 'true';
        Gittip.communities.update(name, !is_member, function()
        {
            window.location.reload();
        });
    });

});
</script>

{{ super() }}
{% endblock %}

{% block box %}
<div class="on-community">
    <h2 class="pad-sign">{{ community.name }}</h2>
    <div class="number">{{ community.nmembers }}</div>
    <div class="unit pad-sign">member{{ '' if community.nmembers == 1 else 's' }}</div>
</div>
<div class="nav level-1">
    {% if user.ANON %}
    <div class="help with-padding">
        {% include "templates/sign-in-using.html" %}
        to join the {{ community.name }} community on Gittip.
    </div>
    {% else %}
    {% set is_member = community.check_membership(user.participant) %}
    <button class="join-leave"
            data-name="{{ community.name }}"
            data-is-member="{{ 'true' if is_member else 'false' }}">
        <span>{{ "Leave" if is_member else "Join" }}</span>
    </button>
    {% endif %}
</div>

{% endblock %}
{% block page %}

{% if community.nmembers == 0 %}

<div class="col0">

    <h2>You're the first one here!</h2>

    <p>Bring the {{ community.name }} community to Gittip to find like-minded
    people to give to.</p>

</div>

{% else %}

<div id="leaderboard">

    <div class="people">
        <h2>New Members</h2>
        <ul class="group">
            {% for i, participant in enumerate(new_participants, start=1) %}
            <li{% if i > LUXURY %} class="luxury"{% endif %}>
                <a href="/{{ participant.username }}/" class="mini-user tip"
                data-tip="{{ to_statement((I_AM if participant.number == 'singular' else WE_ARE) + ' ' + MAKING + ' ',
                participant.statement) }}">
                    <span class="inner">
                        <span class="avatar"
                            style="background-image: url('{{ avatar_url(participant) }}')">
                        </span>
                        <span class="age">{{ _to_age(participant) }}</span>
                        <span class="name">{{ participant.username }}</span>
                    </span>
                </a>
            </li>
            {% endfor %}
        </ul>
    </div>
    <div class="people">
        <h2>Top Givers</h2>
        <ul class="group">
            {% for i, giver in enumerate(givers, start=1) %}
            <li{% if i > LUXURY %} class="luxury"{% endif %}>
                {% if giver.anonymous and not user.ADMIN %}
                <span class="mini-user">
                    <span class="inner">
                        <span class="avatar">
                        </span>
                        <span class="money">${{ format_money(giver.amount) }}</span>
                        <span class="name">Anonymous</span>
                    </span>
                </span>
                {% else %}
                <a href="/{{ giver.username }}/"
                   class="mini-user{{ ' anonymous' if giver.anonymous else '' }} tip"
                   data-tip="{{ to_statement((I_AM if giver.number == 'singular' else WE_ARE) + ' ' + MAKING + ' ',
                   giver.statement) }}">
                    <span class="inner">
                        <span class="avatar" style="background-image: url('{{ avatar_url(giver) }}')">
                        </span>
                        <span class="money">${{ format_money(giver.amount) }}</span>
                        <span class="name">{{ giver.username }}</span>
                    </span>
                </a>
                {% endif %}
            </li>
            {% endfor %}
        </ul>
    </div>
    <div class="people">
        <h2>Top Receivers</h2>
        <ul class="group">
            {% for i, receiver in enumerate(receivers, start=1) %}
            <li{% if i > LUXURY %} class="luxury"{% endif %}>
                {% if receiver.anonymous and not user.ADMIN %}
                <span class="mini-user">
                    <span class="inner">
                        <span class="avatar">
                        </span>
                        <span class="money">${{ format_money(receiver.amount) }}</span>
                        <span class="name">Anonymous</span>
                    </span>
                </span>
                {% else %}
                <a href="/{{ receiver.username }}/"
                   class="mini-user{{ ' anonymous' if receiver.anonymous else '' }} tip"
                   data-tip="{{ to_statement((I_AM if receiver.number == 'singular' else WE_ARE) + ' ' + MAKING + ' ',
                   receiver.statement) }}">
                    <span class="inner">
                        <span class="avatar"
                            style="background-image: url('{{ avatar_url(receiver) }}')">
                        </span>
                        <span class="money">${{ format_money(receiver.amount) }}</span>
                        <span class="name">{{ receiver.username }}</span>
                    </span>
                </a>
                {% endif %}
            </li>
            {% endfor %}
        </ul>
    </div>

</div>

<div class="more-container">
    <a href="/for/{{ community.slug }}/?limit={{ limit + 12 }}"><button class="selected">More</button></a>
</div>

{% endif %}
{% endblock %}
